angular.module("de.cismet.crisma.widgets.scenarioListWidget",["de.cismet.crisma.widgets.scenarioListWidget.directives","de.cismet.crisma.widgets.scenarioListWidget.services","de.cismet.crisma.widgets.scenarioListWidget.controllers"]),angular.module("de.cismet.crisma.widgets.scenarioListWidget.controllers",["de.cismet.crisma.widgets.scenarioListWidget.services","de.cismet.commons.angular.angularTools"]).controller("de.cismet.crisma.widgets.scenarioListWidget.controllers.ScenarioWorldstatesDirectiveController",["$scope","$injector","de.cismet.crisma.widgets.scenarioListWidget.services.ScenarioWorldstatesService","de.cismet.commons.angular.angularTools.AngularTools","DEBUG",function(a,b,c,d){"use strict";var e;e=function(){var c;b.has("de.cismet.crisma.widgets.shared.SharedService")&&(c=b.get("de.cismet.crisma.widgets.shared.SharedService"),a.$on("selectedWorldstatesChanged",function(){d.safeApply(a,function(){a.selectedWorldstates=c.getSelectedWorldstates()})}),a.$watch("selectedWorldstates",function(b,d){if("undefined"==typeof b)throw{name:"IllegalStateException",message:"selected worldstate undefined"};d!==b&&c.setSelectedWorldstates(a.selectedWorldstates)}))},e(),a.scenarioWorldstates=c.getScenarioWorldstates().query(),a.selectedWorldstates=[]}]),angular.module("de.cismet.crisma.widgets.scenarioListWidget.directives",[]).directive("scenarioWorldstatesWidget",function(){"use strict";return{scope:{scenarioWorldstates:"=?",selectedWorldstates:"=?"},restrict:"E",replace:!0,templateUrl:"templates/ScenarioWorldstatesTemplate.html",controller:"de.cismet.crisma.widgets.scenarioListWidget.controllers.ScenarioWorldstatesDirectiveController"}}),angular.module("de.cismet.crisma.widgets.scenarioListWidget.services",["ngResource"]).factory("de.cismet.crisma.widgets.scenarioListWidget.services.ScenarioWorldstatesService",["CRISMA_ICMM_API","CRISMA_DOMAIN","$resource",function(a,b,c){"use strict";var d;return d=function(){return c(a+"/"+b+".worldstates/:wsId",{wsId:"@id",deduplicate:!0,fields:"id,name",level:"1",omitNullValues:"false"},{get:{method:"GET",cache:!0},query:{method:"GET",params:{filter:"childworldstates:\\[\\]"},isArray:!0,transformResponse:function(a){return JSON.parse(a).$collection}}})},{getScenarioWorldstates:d}}]),angular.module("de.cismet.crisma.widgets.scenarioListWidget.directives").run(["$templateCache",function(a){"use strict";a.put("templates/ScenarioWorldstatesTemplate.html",'<div class="expandfull padding-border-box">\n    <div class="well expandfull">\n        <select id="scenarioWorldstateWidget" multiple="true" size="10" data-ng-model="selectedWorldstates" data-ng-options="ws.name for ws in scenarioWorldstates track by ws.id">\n    </div>\n</div>')}]);